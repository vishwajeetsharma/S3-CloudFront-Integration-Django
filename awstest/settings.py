"""
Django settings for awstest project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import environ

# Import the required storage backend


# ***IMPOERTANT*******************************************************************************************************
# https://www.youtube.com/watch?v=RsiXzwesNLQ
# ********************************************************************************************************************

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=nibikb$fsz%wb_vm84xoi1&2_k($9tez0xrm4+14_!hhblz7l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'uploadable',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'awstest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'awstest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = '/static/'

# STATIC_URL = '/static/'
# MEDIA_URL="/media/"
# MEDIA_ROOT=os.path.join(BASE_DIR,"media/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# if DEBUG:
STATIC_URL='/static/'
#     MEDIA_URL="/media/"
#     MEDIA_ROOT=os.path.join(BASE_DIR,"media/")
# else:
# STORAGES = {
#             "default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
#             'staticfiles': {
#                 'BACKEND': 'storages.backends.s3boto3.S3Boto3Storage',
#                 'OPTIONS': {
#                     # Optional: Set the S3 custom domain for CloudFront if applicable
#                     'object_parameters': {
#                         'CacheControl': 'max-age=6000',  # Optional: Specify custom headers for CloudFront or S3
#                     },
#                 },
#             },
#         }
# STORAGES = {"default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"}}
# STORAGES = {
#     "default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
#     "staticfiles": {"BACKEND": "storages.backends.s3boto3.S3StaticStorage"}
#     }
STORAGES = {
    "default": {"BACKEND": "uploadable.custom_storage.MediaStorage"},
    "staticfiles": {"BACKEND": "uploadable.custom_storage.StaticStorage"}
    }

# Set the storage backend for static files
# STATICFILES_STORAGE = {"default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"}}

AWS_ACCESS_KEY_ID=env('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY=env('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME=env('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME=env('AWS_S3_REGION_NAME')
AWS_QUERYSTRING_EXPIRE=3600

AWS_S3_CUSTOM_DOMAIN = 'cdn.wearebuddies.club'

AWS_CLOUDFRONT_KEY_ID=env.str('AWS_CLOUDFRONT_KEY_ID').strip()
AWS_CLOUDFRONT_KEY=env.str('AWS_CLOUDFRONT_KEY', multiline=True).encode('ascii').strip()


# AWS_LOCATION = 'static'
# Set the static URL for CloudFront or S3
# STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/"
# MEDIA_URL=f"https://{AWS_S3_CUSTOM_DOMAIN}/"
# # Set STATIC_ROOT to an empty string since it's not used with CloudFront or S3
# STATIC_ROOT = ''
    # Optional: Specify custom headers for CloudFront or S3
    # AWS_S3_OBJECT_PARAMETERS = {
    #     'CacheControl': 'max-age=0',  # Cache static files for one day
    # }

    # class MediaStorage(S3Boto3Storage):
    #     bucket_name = env('AWS_STORAGE_BUCKET_NAME')
    #     location = 'media'

    # class StaticStorage(S3Boto3Storage):
    #     bucket_name = env('AWS_STORAGE_BUCKET_NAME')
    #     location = 'static'